version: v1.0.0

# Database connection
dsn: postgres://kratos:kratos@kratos-db:5432/kratos?sslmode=disable&max_conns=50&max_idle_conns=10

serve:
  public:
    base_url: http://103.163.119.107:4433
    cors:
      enabled: true
      allowed_origins:
        - http://localhost:8080
      allowed_methods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
      allowed_headers:
        - Authorization
        - Content-Type
        - Cookie
        - X-Requested-With
        - Accept
        - Origin
      exposed_headers:
        - Set-Cookie
      allow_credentials: true
  
  admin:
    base_url: http://localhost:4434

selfservice:
  allowed_return_urls:
    - s29app://auth/callback
    - s29app://oauth/callback
    - http://localhost:8080/api/v1/auth/oauth/callback

  # Authentication methods
  methods:
    password:
      enabled: true
      config:
        haveibeenpwned_enabled: true
        haveibeenpwned_host: api.pwnedpasswords.com
        max_breaches: 0
        ignore_network_errors: false
        min_password_length: 8
        identifier_similarity_check_enabled: true
    
    link:
      enabled: true
      config:
        lifespan: 24h
    code:
      enabled: true
      config:
        lifespan: 15m
    
    oidc:
      enabled: true
      config:
        providers:
          - id: google
            provider: google
            client_id: ""
            client_secret: ""
            issuer_url: https://accounts.google.com
            mapper_url: file:///etc/config/kratos/google-mapper.jsonnet
            scope:
              - openid
              - profile
              - email
          - id: facebook
            provider: facebook
            client_id: "your-facebook-client-id"
            client_secret: "your-facebook-client-secret"
            mapper_url: file:///etc/config/kratos/facebook-mapper.jsonnet
            scope:
              - public_profile
              - email

  # Self-service flows
  flows:
    # error:
    #   ui_url: http://localhost:3000/auth/error

    settings:
      privileged_session_max_age: 15m
      required_aal: aal1
      lifespan: 1h

    recovery:
      enabled: true
      lifespan: 1h
      notify_unknown_recipients: true
      use: code
      after:
        hooks:
          - hook: web_hook
            config:
              url: http://s29-api:8080/api/v1/internal/hooks/after-recovery
              method: POST
              body: file:///etc/config/kratos/after-recovery.jsonnet

    verification:
      enabled: true
      ui_url: http://localhost:3000/auth/verification
      lifespan: 24h
      notify_unknown_recipients: false
      # after:
      #   default_browser_return_url: http://localhost:3000/dashboard?verified=true

    logout:
      # after:
      #   default_browser_return_url: http://localhost:3000

    login:
      lifespan: 1h

    registration:
      lifespan: 1h
      after:
        password:
          hooks:
            - hook: web_hook
              config:
                url: http://s29-api:8080/api/v1/internal/hooks/after-registration
                method: POST
                body: file:///etc/config/kratos/after-registration.jsonnet

# Session configuration
session:
  lifespan: 720h  # 30 days
  earliest_possible_extend: 1h
  cookie:
    name: ory_kratos_session
    domain: localhost
    path: /
    same_site: Lax
    persistent: true

# Secrets (use environment variables)
secrets:
  cookie:
    - ${KRATOS_SECRET_COOKIE}
  cipher:
    - ${KRATOS_SECRET_CIPHER}

# Identity schema
identity:
  default_schema_id: s29_user
  schemas:
    - id: s29_user
      url: file:///etc/config/kratos/identity.schema.json

# Password hashing (optimized for development)
hashers:
  algorithm: argon2
  argon2:
    parallelism: 1
    memory: 128MB
    iterations: 2
    salt_length: 16
    key_length: 32
    expected_duration: 500ms
    expected_deviation: 500ms

# Email configuration (Mailhog for development)
courier:
  smtp:
    connection_uri: "smtp://mailhog:1025/?skip_ssl_verify=true"
    from_address: "noreply@suviet.com"
    from_name: "Suviet Platform"
  
  
feature_flags:
  use_continue_with_transitions: true

# Logging
log:
  level: debug
  format: text
  leak_sensitive_values: true

# Development mode
dev:
  disable_csrf: true